@model IEnumerable<SystemFormViewModel>
@{
    var entity = Url.ActionContext.RouteData.Values["controller"].ToString();
    var title = Entities.ResourceManager.GetString(entity);
    ViewData["Title"] = title;
}

@section breadcrumbs{
    @await Component.InvokeAsync("BreadCrumb", new
    {
        args = new AdminBreadCrumbArgsViewModel
        {
            EntityTitle = title,
            Controller = entity,
            PageType = AdminPageType.List
        }
    })
}

<div class="k-rtl">

    @(Html.Kendo().Grid(Model)
    .Name("Grid")
    .Columns(columns =>
    {
        columns.Bound(m => m.Id)
                    .ClientTemplate("#= renderNumber() #")
                    .Title("ردیف").Sortable(false).Width(100);
        columns.Bound(p => p.Title).Title("عنوان");
        columns.Bound(p => p.ParentTitle).Title("گروه");
        columns.Bound(p => p.EntityName).Title("موجودیت");
        columns.Bound(p => p.Id).ClientTemplate("<a href='./" + entity + "/Edit/#:Id#'><i class='k-icon k-i-edit'></i></a>&nbsp;&nbsp;&nbsp;<a onclick='return confirm(\"آیا از حذف این مورد اطمینان دارید؟\")' href='./" + entity + "/Delete/#:Id#'><i class='k-icon k-i-delete'></i></a>").HeaderHtmlAttributes(new { @class = "custom-action-button" }).Title("عملیات").Sortable(false); ;

    })
    .ToolBar(toolbar =>
    {
        toolbar.Search();
        toolbar.Excel().Text("خروجی اکسل");
      // toolbar.Pdf().Text("خروجی پی دی اف");
    })
    .Pdf(pdf => pdf
           .AllPages()
           .Landscape()
           .PaperSize("A4")
           .Scale(0.75)
        ).Excel(excel => excel
        .FileName("SystemForm.xlsx")
        .AllPages()
        )
    .Pageable()
    .Sortable()
    .Filterable()
    .Navigatable()
      .Reorderable(reorderable => reorderable.Columns(true))
        .ColumnMenu()
        .Scrollable(s=>s.Virtual(GridVirtualizationMode.Columns).Height("auto"))
        .DataSource(dataSource => dataSource
        .WebApi()
         .ServerOperation(false)
        .Model(model =>
        {
            model.Id(p => p.Id);
        })))
</div>

@functions
{
    public string RenderManangementColumn(object id)
    {
        string edit = $"<a href='{Context.Request.Path.Value.Replace("/Grid", "")}/Edit/{id}'><i class='k-icon k-i-pen'></i></a>";
        string delete = $"<a onclick='return confirm(\"آیا از حذف این مورد اطمینان دارید؟\")' href='{Context.Request.Path.Value.Replace("/Grid", "")}/Delete/{id}'><i class='k-icon k-i-delete'></i></a>";

        return edit + delete;
    }
}
<script>
    function error_handler(e) {
        var errors = $.parseJSON(e.xhr.responseText);
        if (errors) {
            alert("Errors:\n" + errors.join("\n"));
        }
    }

</script>


