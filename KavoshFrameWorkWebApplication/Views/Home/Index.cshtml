@model DashboardViewModel
@{
    ViewData["Title"] = "داشبورد";
}
@inject Microsoft.AspNetCore.Identity.UserManager<ApplicationUser> userManager
<style>
    .btn-xs {
        font-size: 11px;
    }

</style>
<!-- Top Statistics -->
<div class="content-wrapper">

    <div class="content">
        <div class="row">
            <div class="col-xl-12 col-md-12">
                <!-- Sales Graph -->
                <div class="card card-default" data-scroll-height="675">
                    <div class="card-header">
                        <h2>Sales Of The Year</h2>
                    </div>
                    <div class="card-body">
                        <div class="demo-section k-content wide">
                            <div class="demo-section k-content wide">
                                @(Html.Kendo().Chart()
                                    .Name("chart")
                                    .Title("March Weather Report")
                                    .Legend(legend => legend
                                        .Position(ChartLegendPosition.Bottom)
                                    )
                                    .Series(series =>
                                    {
                                        series
                                            .Line(new double[] { 6, 10, 10, 10, 10, 9, 5, 5, 10, 8, 8, 5, 8, 11, 9, 15, 20, 23, 24, 21, 21, 20, 22, 22, 20, 18, 16, 15, 20, 13.2, 18 })
                                            .Color("#ff1c1c")
                                            .Name("Max. Temperature [&deg;C]")
                                            .Axis("temp");
                                        series
                                            .Line(new double[] { -5, -6, 0, -4, -3, -5.2, -5, -1.7, -1, 0, -0.4, -2, -2, -5, 4, -2, -4, -1, -1, 2, 4, -1, 1, 1, 4, 0, -1, 1, -2, 5.7, 5 })
                                            .Color("#ffae00")
                                            .Name("Min. Temperature [&deg;C]")
                                            .Axis("temp");
                                        series
                                            .Area(new double[] { 16.4, 21.7, 35.4, 19, 10.9, 13.6, 10.9, 10.9, 10.9, 16.4, 16.4, 13.6, 13.6, 29.9, 27.1, 16.4, 13.6, 10.9, 16.4, 10.9, 24.5, 10.9, 8.1, 19, 21.7, 27.1, 24.5, 16.4, 27.1, 29.9, 27.1 })
                                            .Color("#73c100")
                                            .Name("Wind Speed [km/h]")
                                            .Axis("wind");
                                        series
                                            .Area(new double[] { 5.4, 2, 5.4, 3, 2, 1, 3.2, 7.4, 0, 8.2, 0, 1.8, 0.3, 0, 0, 2.3, 0, 3.7, 5.2, 6.5, 0, 7.1, 0, 4.7, 0, 1.8, 0, 0, 0, 1.5, 0.8 })
                                            .Color("#007eff")
                                            .Name("Rainfall [mm]")
                                            .Axis("rain");
                                    })
                                    .CategoryAxis(axis => axis
                                        .Categories("1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31")
                                        // Align the first two value axes to the left
                                        // and the last two to the right.
                                        //
                                        // Right alignment is done by specifying a
                                        // crossing value greater than or equal to
                                        // the number of categories.
                                        .AxisCrossingValue(32, 32, 0)
                                        .Justify(true)
                                    )
                                    .ValueAxis(axis => axis
                                        .Numeric("rain")
                                        .Color("#007eff")
                                        .Min(0)
                                        .Max(60)
                                    )
                                    .ValueAxis(axis => axis
                                        .Numeric("wind")
                                        .Color("#73c100")
                                        .Min(0)
                                        .Max(60)
                                    )
                                    .ValueAxis(axis => axis
                                        .Numeric("temp")
                                        .Min(-30)
                                        .Max(30)
                                    )
                                    .Tooltip(tooltip => tooltip
                                        .Visible(true)
                                        .Format("{0}")
                                        .Template("#= category #/03: #= value #")
                                    )
                                )
                            </div>
                        </div>
                    </div>
                    <div class="card-footer d-flex flex-wrap bg-white p-0">
                        <div class="col-6 px-0">
                            <div class="text-center p-4">
                                <h4>$6,308</h4>
                                <p class="mt-2">Total orders of this year</p>
                            </div>
                        </div>
                        <div class="col-6 px-0">
                            <div class="text-center p-4 border-left">
                                <h4>$70,506</h4>
                                <p class="mt-2">Total revenue of this year</p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>


        <div class="row">
            <div class="col-xl-12 col-md-12">
                <!-- Sales Graph -->
                <div class="card card-default" data-scroll-height="675">
                    <div class="card-header">
                        <h2>Sales Of The Year</h2>
                    </div>
                    <div class="card-body">
                        <div class="demo-section k-content wide">
                            <div class="demo-section k-content wide">
                                @(Html.Kendo().Chart()
                                    .Name("chart2")
                                    .Title("Gross domestic product growth /GDP annual %/")
                                    .Legend(legend => legend
                                        .Position(ChartLegendPosition.Top)
                                    )
                                    .ChartArea(chartArea => chartArea.Background("transparent")
                                    )
                                    .Series(series =>
                                    {
                                        series.Column(new double[] { 3.907, 7.943, 7.848, 9.284, 9.263, 9.801, 3.890, 8.238, 9.552, 6.855 }).Name("India");
                                        series.Column(new double[] { 4.743, 7.295, 7.175, 6.376, 8.153, 8.535, 5.247, -7.832, 4.3, 4.3 }).Name("Russian Federation");
                                        series.Column(new double[] { 0.010, -0.375, 1.161, 0.684, 3.7, 3.269, 1.083, -5.127, 3.690, 2.995 }).Name("Germany");
                                        series.Column(new double[] { 1.988, 2.733, 3.994, 3.464, 4.001, 3.939, 1.333, -2.245, 4.339, 2.727 }).Name("World");
                                    })
                                    .CategoryAxis(axis => axis
                                        .Name("series-axis")
                                        .Line(line => line.Visible(false))
                                    )
                                    .CategoryAxis(axis => axis
                                        .Name("label-axis")
                                        .Categories("2002", "2003", "2004", "2005", "2006", "2007", "2008", "2009", "2010", "2011")
                                    )
                                    .ValueAxis(axis => axis
                                        .Numeric()
                                            .Labels(labels => labels.Format("{0}%"))

                                            // Move the label-axis all the way down the value axis
                                            .AxisCrossingValue(0, int.MinValue)
                                    )
                                    .Tooltip(tooltip => tooltip
                                        .Visible(true)
                                        .Format("{0}%")
                                        .Template("#= series.name #: #= value #")
                                    )
                                )
                            </div>
                        </div>
                    </div>
                    <div class="card-footer d-flex flex-wrap bg-white p-0">
                        <div class="col-6 px-0">
                            <div class="text-center p-4">
                                <h4>$6,308</h4>
                                <p class="mt-2">Total orders of this year</p>
                            </div>
                        </div>
                        <div class="col-6 px-0">
                            <div class="text-center p-4 border-left">
                                <h4>$70,506</h4>
                                <p class="mt-2">Total revenue of this year</p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


